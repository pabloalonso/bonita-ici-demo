
(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbTitle',function(){return{template:'<h1 ng-if="\'Level 1\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h1>\n<h2 ng-if="\'Level 2\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h2>\n<h3 ng-if="\'Level 3\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h3>\n<h4 ng-if="\'Level 4\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h4>\n<h5 ng-if="\'Level 5\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h5>\n<h6 ng-if="\'Level 6\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h6>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbDataTable',function(){return{controllerAs:'ctrl',controller:function PbDataTableCtrl($scope,$http,$log,$filter){var vm=this;Object.defineProperty(vm,'jsonData',{'get':function(){var data=$filter('filter')(this.data||[],$scope.properties.filter||undefined);if(vm.sortOptions.property===undefined||vm.sortOptions.direction===undefined){return data;}
return $filter('orderBy')(data,vm.sortOptions.property,vm.sortOptions.direction);},'set':function(data){this.data=data;}});this.sortOptions={property:($scope.properties.sortColumns||[])[0],direction:false};this.pagination={currentPage:1,total:0};this.hasMultiColumns=function(){return Array.isArray($scope.properties.columnsKey);};this.isSelectable=function(){return $scope.properties.isBound('selectedRow');};this.createRequest=function(){var params={c:$scope.properties.pageSize,p:this.pagination.currentPage-1||0,s:$scope.properties.filter};if(this.sortOptions.property){params.o=this.sortOptions.property+' '+(this.sortOptions.direction?'DESC':'ASC');}
return{url:this.removeHandledParams($scope.properties.apiUrl),transformResponse:$http.defaults.transformResponse.concat(transformResponse),params:angular.extend({},$scope.properties.params||{},params)};};this.removeHandledParams=function(url){return['c','p'].reduce(function(acc,param){return acc.replace(new RegExp('(&'+param+'=[^&#]*([&#])?)','g'),'$2').replace(new RegExp('[?]'+param+'=[^&#]*&?','g'),'?');},url||'');};this.updateResultsFromAPI=function(){if($scope.properties.apiUrl){$http(vm.createRequest()).then(function(response){vm.results=response.data.results;vm.pagination=response.data.pagination;}).catch(function(error){$log.error(error);});}};this.updateResultsFromJson=function(){var start=(vm.pagination.currentPage-1)*$scope.properties.pageSize;var end=vm.pagination.currentPage*$scope.properties.pageSize;vm.results=vm.jsonData.slice(start,end);};this.sortHandler=function(){this.updateResults();};this.paginationHandler=function(){this.updateResults();};this.selectRowHandler=function(row){if(this.isSelectable()){$scope.properties.selectedRow=row;}};this.isColumnSortable=function(index){return $scope.properties.type==='Variable'||(angular.isArray($scope.properties.sortColumns)&&$scope.properties.sortColumns.indexOf($scope.properties.columnsKey[index])>-1);};function transformResponse(data,header){return{results:data,pagination:parseContentRange(header('Content-Range'))};}
function parseContentRange(strContentRange){if(strContentRange===null){return{};}
var arrayContentRange=strContentRange.split('/');var arrayIndexNumPerPage=arrayContentRange[0].split('-');return{total:parseInt(arrayContentRange[1],10),currentPage:parseInt(arrayIndexNumPerPage[0],10)+1};}
vm.updateResults=function(){if($scope.properties.type==='Variable'){vm.updateResultsFromJson();}else{vm.updateResultsFromAPI();}};$scope.$watch('[properties.pageSize, properties.apiUrl, properties.filter, properties.params]',resetPaginationAndUpdateResults,true);function resetPaginationAndUpdateResults(){vm.pagination={currentPage:1,total:vm.jsonData.length};vm.updateResults();}
$scope.$watchCollection('properties.content',function(data){if(!Array.isArray(data)){return;}
vm.jsonData=data;vm.pagination={currentPage:1,total:data.length};vm.updateResults();});},template:'<div class="table-responsive">\n    <table bonitable\n           sort-options="ctrl.sortOptions"\n           on-sort="ctrl.sortHandler()"\n           class="table table-striped" ng-class="{\'table-hover\': ctrl.isSelectable()}">\n        <thead>\n            <tr>\n                <th ng-repeat="header in properties.headers">\n                    <div ng-if="ctrl.isColumnSortable($index)" bo-sorter="{{properties.columnsKey[$index]}}">\n                            {{ header | uiTranslate }}\n                    </div>\n                    <div ng-if="!ctrl.isColumnSortable($index)">\n                        {{ header | uiTranslate }}\n                    </div>\n                </th>\n            </tr>\n        </thead>\n        <tbody ng-if="ctrl.hasMultiColumns()">\n        <tr ng-repeat="row in ctrl.results" ng-click="ctrl.selectRowHandler(row)"\n            ng-class="{\'info\': row === properties.selectedRow}">\n            <td ng-repeat="column in properties.columnsKey track by $index">\n                {{ $eval(column, row) | uiTranslate }}\n            </td>\n        </tr>\n        </tbody>\n        <tbody ng-if="!ctrl.hasMultiColumns()">\n        <tr ng-repeat="row in ctrl.results" ng-click="ctrl.selectRowHandler(row)"\n            ng-class="{\'info\': row === properties.selectedRow}">\n            <td> {{ row | uiTranslate }}</td>\n        </tr>\n        </tbody>\n    </table>\n    <div class="hidden-xs"\n         ng-repeat="options in [{\'maxSize\': 5, \'rotate\': false}]"\n         ng-include="\'/dataTable/pagination.html\'" >\n    </div>\n    <div class="visible-xs text-center"\n         ng-repeat="options in [{\'maxSize\': 3, \'rotate\': true}]"\n         ng-include="\'/dataTable/pagination.html\'" >\n    </div>\n\n    <script type="text/ng-template" id="/dataTable/pagination.html">\n        <pagination ng-if="ctrl.pagination.total > properties.pageSize"\n                    total-items="ctrl.pagination.total"\n                    items-per-page="properties.pageSize"\n                    direction-links="true"\n                    boundary-links="true"\n                    previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;"\n                    rotate="{{options.rotate}}"\n                    max-size="{{options.maxSize}}"\n                    ng-model="ctrl.pagination.currentPage"\n                    ng-change="ctrl.paginationHandler()">\n        </pagination>\n    </script>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbText',function(){return{template:'<p class="text-{{ properties.alignment }}" ng-bind-html="properties.text | uiTranslate"></p>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbRadioButtons',function(){return{controllerAs:'ctrl',controller:function PbRadioBoxCtrl($scope,$parse,$log,widgetNameFactory){'use strict';var ctrl=this;function comparator(initialValue,item){return angular.equals(initialValue,ctrl.getValue(item));}
function createGetter(accessor){return accessor&&$parse(accessor);}
this.getLabel=createGetter($scope.properties.displayedKey)||function(item){return typeof item==='string'?item:JSON.stringify(item);};this.getValue=createGetter($scope.properties.returnedKey)||function(item){return item;};$scope.$watchCollection('properties.availableValues',function(items){if(Array.isArray(items)){var foundValue=items.filter(comparator.bind(null,$scope.properties.selectedValue)).reduce(function(acc,item){return ctrl.getValue(item);},undefined);if(foundValue){$scope.properties.selectedValue=foundValue;}}});this.name=widgetNameFactory.getName('pbRadioBox');if(!$scope.properties.isBound('selectedValue')){$log.error('the pbRadioBox property named "selectedValue" need to be bound to a variable');}},template:'<div ng-class="{\n    \'form-horizontal\': properties.labelPosition === \'left\' && !properties.labelHidden,\n    \'row\': properties.labelPosition === \'top\' && !properties.labelHidden || properties.labelHidden\n    }">\n    <div class="form-group">\n        <label\n            ng-if="!properties.labelHidden"\n            ng-class="{ \'control-label--required\': properties.required }"\n            class="control-label col-xs-{{ !properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 12 }}">\n        {{ properties.label | uiTranslate }}\n        </label>\n        <div class="col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}">\n            <label ng-if="properties.inline" class="radio-inline" ng-repeat="option in properties.availableValues track by $index">\n                <input\n                    type="radio"\n                    name="{{ctrl.name}}"\n                    ng-model="properties.selectedValue"\n                    ng-value="ctrl.getValue(option)"\n                    ng-required="properties.required"\n                    ng-disabled="properties.disabled">\n                {{ (ctrl.getLabel(option) || option) | uiTranslate }}\n            </label>\n\n            <div ng-if="!properties.inline" class="radio" ng-repeat="option in properties.availableValues track by $index">\n                <label>\n                    <input\n                        type="radio"\n                        name="{{ctrl.name}}"\n                        ng-model="properties.selectedValue"\n                        ng-value="ctrl.getValue(option)"\n                        ng-required="properties.required"\n                        ng-disabled="properties.disabled">\n                    {{ (ctrl.getLabel(option) || option) | uiTranslate }}\n                </label>\n            </div>\n        </div>\n        <div ng-messages="$form[ctrl.name].$dirty && $form[ctrl.name].$error " ng-messages-include="forms-generic-errors.html" role="alert"></div>\n    </div>\n</div>\n'};});